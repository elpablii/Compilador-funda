Terminals unused in grammar

    T_FOR


State 57 conflicts: 2 shift/reduce
State 78 conflicts: 2 shift/reduce
State 79 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: ε
    3               | statement_list statement

    4 statement: variable_declaration
    5          | assignment_statement
    6          | if_statement
    7          | while_statement
    8          | print_statement
    9          | read_statement
   10          | block
   11          | T_SEMICOLON
   12          | T_ERROR T_SEMICOLON

   13 block: T_LBRACE statement_list T_RBRACE

   14 type_specifier: T_INT
   15               | T_FLOAT
   16               | T_STRING_TYPE
   17               | T_BOOL

   18 variable_declaration: type_specifier identifier T_SEMICOLON
   19                     | type_specifier identifier T_ASSIGN expression T_SEMICOLON

   20 assignment_statement: identifier T_ASSIGN expression T_SEMICOLON

   21 if_statement: T_IF T_LPAREN expression T_RPAREN block
   22             | T_IF T_LPAREN expression T_RPAREN block T_ELSE block

   23 while_statement: T_WHILE T_LPAREN expression T_RPAREN block

   24 print_statement: T_PRINT T_LPAREN expression T_RPAREN T_SEMICOLON

   25 read_statement: T_READ T_LPAREN identifier T_RPAREN T_SEMICOLON

   26 expression: expression T_AND expression
   27           | expression T_OR expression
   28           | T_NOT expression
   29           | comparison_expression

   30 comparison_expression: arithmetic_expression
   31                      | arithmetic_expression T_EQ arithmetic_expression
   32                      | arithmetic_expression T_NEQ arithmetic_expression
   33                      | arithmetic_expression T_LT arithmetic_expression
   34                      | arithmetic_expression T_GT arithmetic_expression
   35                      | arithmetic_expression T_LTE arithmetic_expression
   36                      | arithmetic_expression T_GTE arithmetic_expression

   37 arithmetic_expression: term
   38                      | arithmetic_expression T_PLUS term
   39                      | arithmetic_expression T_MINUS term

   40 term: factor
   41     | term T_MULTIPLY factor
   42     | term T_DIVIDE factor

   43 factor: primary_expression

   44 primary_expression: identifier
   45                   | T_INTEGER_LITERAL
   46                   | T_FLOAT_LITERAL
   47                   | T_STRING_LITERAL
   48                   | bool_literal
   49                   | T_LPAREN expression T_RPAREN

   50 bool_literal: T_TRUE
   51             | T_FALSE

   52 identifier: T_IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_IDENTIFIER <sval> (258) 52
    T_INTEGER_LITERAL <ival> (259) 45
    T_FLOAT_LITERAL <fval> (260) 46
    T_STRING_LITERAL <sval> (261) 47
    T_INT (262) 14
    T_FLOAT (263) 15
    T_STRING_TYPE (264) 16
    T_IF (265) 21 22
    T_ELSE (266) 22
    T_WHILE (267) 23
    T_FOR (268)
    T_PRINT (269) 24
    T_READ (270) 25
    T_ASSIGN (271) 19 20
    T_PLUS (272) 38
    T_MINUS (273) 39
    T_MULTIPLY (274) 41
    T_DIVIDE (275) 42
    T_EQ (276) 31
    T_NEQ (277) 32
    T_LT (278) 33
    T_GT (279) 34
    T_LTE (280) 35
    T_GTE (281) 36
    T_LPAREN (282) 21 22 23 24 25 49
    T_RPAREN (283) 21 22 23 24 25 49
    T_LBRACE (284) 13
    T_RBRACE (285) 13
    T_SEMICOLON (286) 11 12 18 19 20 24 25
    T_ERROR (287) 12
    T_BOOL (288) 17
    T_TRUE (289) 50
    T_FALSE (290) 51
    T_AND (291) 26
    T_OR (292) 27
    T_NOT (293) 28


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    program <nodo> (40)
        on left: 1
        on right: 0
    statement_list <nodo_lista_instr> (41)
        on left: 2 3
        on right: 1 3 13
    statement <nodo> (42)
        on left: 4 5 6 7 8 9 10 11 12
        on right: 3
    block <nodo_lista_instr> (43)
        on left: 13
        on right: 10 21 22 23
    type_specifier <tipo_dato> (44)
        on left: 14 15 16 17
        on right: 18 19
    variable_declaration <nodo_decl_var> (45)
        on left: 18 19
        on right: 4
    assignment_statement <nodo_asig> (46)
        on left: 20
        on right: 5
    if_statement <nodo_si> (47)
        on left: 21 22
        on right: 6
    while_statement <nodo_mientras> (48)
        on left: 23
        on right: 7
    print_statement <nodo_imprimir> (49)
        on left: 24
        on right: 8
    read_statement <nodo_leer> (50)
        on left: 25
        on right: 9
    expression <nodo> (51)
        on left: 26 27 28 29
        on right: 19 20 21 22 23 24 26 27 28 49
    comparison_expression <nodo> (52)
        on left: 30 31 32 33 34 35 36
        on right: 29
    arithmetic_expression <nodo> (53)
        on left: 37 38 39
        on right: 30 31 32 33 34 35 36 38 39
    term <nodo> (54)
        on left: 40 41 42
        on right: 37 38 39 41 42
    factor <nodo> (55)
        on left: 43
        on right: 40 41 42
    primary_expression <nodo> (56)
        on left: 44 45 46 47 48 49
        on right: 43
    bool_literal <nodo> (57)
        on left: 50 51
        on right: 48
    identifier <nodo_id> (58)
        on left: 52
        on right: 18 19 20 25 44


State 0

    0 $accept: • program $end
    1 program: • statement_list
    2 statement_list: ε •
    3               | • statement_list statement

    $default  reduce using rule 2 (statement_list)

    program         go to state 1
    statement_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: statement_list •  [$end]
    3 statement_list: statement_list • statement
    4 statement: • variable_declaration
    5          | • assignment_statement
    6          | • if_statement
    7          | • while_statement
    8          | • print_statement
    9          | • read_statement
   10          | • block
   11          | • T_SEMICOLON
   12          | • T_ERROR T_SEMICOLON
   13 block: • T_LBRACE statement_list T_RBRACE
   14 type_specifier: • T_INT
   15               | • T_FLOAT
   16               | • T_STRING_TYPE
   17               | • T_BOOL
   18 variable_declaration: • type_specifier identifier T_SEMICOLON
   19                     | • type_specifier identifier T_ASSIGN expression T_SEMICOLON
   20 assignment_statement: • identifier T_ASSIGN expression T_SEMICOLON
   21 if_statement: • T_IF T_LPAREN expression T_RPAREN block
   22             | • T_IF T_LPAREN expression T_RPAREN block T_ELSE block
   23 while_statement: • T_WHILE T_LPAREN expression T_RPAREN block
   24 print_statement: • T_PRINT T_LPAREN expression T_RPAREN T_SEMICOLON
   25 read_statement: • T_READ T_LPAREN identifier T_RPAREN T_SEMICOLON
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER   shift, and go to state 4
    T_INT          shift, and go to state 5
    T_FLOAT        shift, and go to state 6
    T_STRING_TYPE  shift, and go to state 7
    T_IF           shift, and go to state 8
    T_WHILE        shift, and go to state 9
    T_PRINT        shift, and go to state 10
    T_READ         shift, and go to state 11
    T_LBRACE       shift, and go to state 12
    T_SEMICOLON    shift, and go to state 13
    T_ERROR        shift, and go to state 14
    T_BOOL         shift, and go to state 15

    $default  reduce using rule 1 (program)

    statement             go to state 16
    block                 go to state 17
    type_specifier        go to state 18
    variable_declaration  go to state 19
    assignment_statement  go to state 20
    if_statement          go to state 21
    while_statement       go to state 22
    print_statement       go to state 23
    read_statement        go to state 24
    identifier            go to state 25


State 3

    0 $accept: program $end •

    $default  accept


State 4

   52 identifier: T_IDENTIFIER •

    $default  reduce using rule 52 (identifier)


State 5

   14 type_specifier: T_INT •

    $default  reduce using rule 14 (type_specifier)


State 6

   15 type_specifier: T_FLOAT •

    $default  reduce using rule 15 (type_specifier)


State 7

   16 type_specifier: T_STRING_TYPE •

    $default  reduce using rule 16 (type_specifier)


State 8

   21 if_statement: T_IF • T_LPAREN expression T_RPAREN block
   22             | T_IF • T_LPAREN expression T_RPAREN block T_ELSE block

    T_LPAREN  shift, and go to state 26


State 9

   23 while_statement: T_WHILE • T_LPAREN expression T_RPAREN block

    T_LPAREN  shift, and go to state 27


State 10

   24 print_statement: T_PRINT • T_LPAREN expression T_RPAREN T_SEMICOLON

    T_LPAREN  shift, and go to state 28


State 11

   25 read_statement: T_READ • T_LPAREN identifier T_RPAREN T_SEMICOLON

    T_LPAREN  shift, and go to state 29


State 12

    2 statement_list: ε •
    3               | • statement_list statement
   13 block: T_LBRACE • statement_list T_RBRACE

    $default  reduce using rule 2 (statement_list)

    statement_list  go to state 30


State 13

   11 statement: T_SEMICOLON •

    $default  reduce using rule 11 (statement)


State 14

   12 statement: T_ERROR • T_SEMICOLON

    T_SEMICOLON  shift, and go to state 31


State 15

   17 type_specifier: T_BOOL •

    $default  reduce using rule 17 (type_specifier)


State 16

    3 statement_list: statement_list statement •

    $default  reduce using rule 3 (statement_list)


State 17

   10 statement: block •

    $default  reduce using rule 10 (statement)


State 18

   18 variable_declaration: type_specifier • identifier T_SEMICOLON
   19                     | type_specifier • identifier T_ASSIGN expression T_SEMICOLON
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 4

    identifier  go to state 32


State 19

    4 statement: variable_declaration •

    $default  reduce using rule 4 (statement)


State 20

    5 statement: assignment_statement •

    $default  reduce using rule 5 (statement)


State 21

    6 statement: if_statement •

    $default  reduce using rule 6 (statement)


State 22

    7 statement: while_statement •

    $default  reduce using rule 7 (statement)


State 23

    8 statement: print_statement •

    $default  reduce using rule 8 (statement)


State 24

    9 statement: read_statement •

    $default  reduce using rule 9 (statement)


State 25

   20 assignment_statement: identifier • T_ASSIGN expression T_SEMICOLON

    T_ASSIGN  shift, and go to state 33


State 26

   21 if_statement: T_IF T_LPAREN • expression T_RPAREN block
   22             | T_IF T_LPAREN • expression T_RPAREN block T_ELSE block
   26 expression: • expression T_AND expression
   27           | • expression T_OR expression
   28           | • T_NOT expression
   29           | • comparison_expression
   30 comparison_expression: • arithmetic_expression
   31                      | • arithmetic_expression T_EQ arithmetic_expression
   32                      | • arithmetic_expression T_NEQ arithmetic_expression
   33                      | • arithmetic_expression T_LT arithmetic_expression
   34                      | • arithmetic_expression T_GT arithmetic_expression
   35                      | • arithmetic_expression T_LTE arithmetic_expression
   36                      | • arithmetic_expression T_GTE arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39
    T_NOT              shift, and go to state 40

    expression             go to state 41
    comparison_expression  go to state 42
    arithmetic_expression  go to state 43
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 27

   23 while_statement: T_WHILE T_LPAREN • expression T_RPAREN block
   26 expression: • expression T_AND expression
   27           | • expression T_OR expression
   28           | • T_NOT expression
   29           | • comparison_expression
   30 comparison_expression: • arithmetic_expression
   31                      | • arithmetic_expression T_EQ arithmetic_expression
   32                      | • arithmetic_expression T_NEQ arithmetic_expression
   33                      | • arithmetic_expression T_LT arithmetic_expression
   34                      | • arithmetic_expression T_GT arithmetic_expression
   35                      | • arithmetic_expression T_LTE arithmetic_expression
   36                      | • arithmetic_expression T_GTE arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39
    T_NOT              shift, and go to state 40

    expression             go to state 49
    comparison_expression  go to state 42
    arithmetic_expression  go to state 43
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 28

   24 print_statement: T_PRINT T_LPAREN • expression T_RPAREN T_SEMICOLON
   26 expression: • expression T_AND expression
   27           | • expression T_OR expression
   28           | • T_NOT expression
   29           | • comparison_expression
   30 comparison_expression: • arithmetic_expression
   31                      | • arithmetic_expression T_EQ arithmetic_expression
   32                      | • arithmetic_expression T_NEQ arithmetic_expression
   33                      | • arithmetic_expression T_LT arithmetic_expression
   34                      | • arithmetic_expression T_GT arithmetic_expression
   35                      | • arithmetic_expression T_LTE arithmetic_expression
   36                      | • arithmetic_expression T_GTE arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39
    T_NOT              shift, and go to state 40

    expression             go to state 50
    comparison_expression  go to state 42
    arithmetic_expression  go to state 43
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 29

   25 read_statement: T_READ T_LPAREN • identifier T_RPAREN T_SEMICOLON
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 4

    identifier  go to state 51


State 30

    3 statement_list: statement_list • statement
    4 statement: • variable_declaration
    5          | • assignment_statement
    6          | • if_statement
    7          | • while_statement
    8          | • print_statement
    9          | • read_statement
   10          | • block
   11          | • T_SEMICOLON
   12          | • T_ERROR T_SEMICOLON
   13 block: • T_LBRACE statement_list T_RBRACE
   13      | T_LBRACE statement_list • T_RBRACE
   14 type_specifier: • T_INT
   15               | • T_FLOAT
   16               | • T_STRING_TYPE
   17               | • T_BOOL
   18 variable_declaration: • type_specifier identifier T_SEMICOLON
   19                     | • type_specifier identifier T_ASSIGN expression T_SEMICOLON
   20 assignment_statement: • identifier T_ASSIGN expression T_SEMICOLON
   21 if_statement: • T_IF T_LPAREN expression T_RPAREN block
   22             | • T_IF T_LPAREN expression T_RPAREN block T_ELSE block
   23 while_statement: • T_WHILE T_LPAREN expression T_RPAREN block
   24 print_statement: • T_PRINT T_LPAREN expression T_RPAREN T_SEMICOLON
   25 read_statement: • T_READ T_LPAREN identifier T_RPAREN T_SEMICOLON
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER   shift, and go to state 4
    T_INT          shift, and go to state 5
    T_FLOAT        shift, and go to state 6
    T_STRING_TYPE  shift, and go to state 7
    T_IF           shift, and go to state 8
    T_WHILE        shift, and go to state 9
    T_PRINT        shift, and go to state 10
    T_READ         shift, and go to state 11
    T_LBRACE       shift, and go to state 12
    T_RBRACE       shift, and go to state 52
    T_SEMICOLON    shift, and go to state 13
    T_ERROR        shift, and go to state 14
    T_BOOL         shift, and go to state 15

    statement             go to state 16
    block                 go to state 17
    type_specifier        go to state 18
    variable_declaration  go to state 19
    assignment_statement  go to state 20
    if_statement          go to state 21
    while_statement       go to state 22
    print_statement       go to state 23
    read_statement        go to state 24
    identifier            go to state 25


State 31

   12 statement: T_ERROR T_SEMICOLON •

    $default  reduce using rule 12 (statement)


State 32

   18 variable_declaration: type_specifier identifier • T_SEMICOLON
   19                     | type_specifier identifier • T_ASSIGN expression T_SEMICOLON

    T_ASSIGN     shift, and go to state 53
    T_SEMICOLON  shift, and go to state 54


State 33

   20 assignment_statement: identifier T_ASSIGN • expression T_SEMICOLON
   26 expression: • expression T_AND expression
   27           | • expression T_OR expression
   28           | • T_NOT expression
   29           | • comparison_expression
   30 comparison_expression: • arithmetic_expression
   31                      | • arithmetic_expression T_EQ arithmetic_expression
   32                      | • arithmetic_expression T_NEQ arithmetic_expression
   33                      | • arithmetic_expression T_LT arithmetic_expression
   34                      | • arithmetic_expression T_GT arithmetic_expression
   35                      | • arithmetic_expression T_LTE arithmetic_expression
   36                      | • arithmetic_expression T_GTE arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39
    T_NOT              shift, and go to state 40

    expression             go to state 55
    comparison_expression  go to state 42
    arithmetic_expression  go to state 43
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 34

   45 primary_expression: T_INTEGER_LITERAL •

    $default  reduce using rule 45 (primary_expression)


State 35

   46 primary_expression: T_FLOAT_LITERAL •

    $default  reduce using rule 46 (primary_expression)


State 36

   47 primary_expression: T_STRING_LITERAL •

    $default  reduce using rule 47 (primary_expression)


State 37

   26 expression: • expression T_AND expression
   27           | • expression T_OR expression
   28           | • T_NOT expression
   29           | • comparison_expression
   30 comparison_expression: • arithmetic_expression
   31                      | • arithmetic_expression T_EQ arithmetic_expression
   32                      | • arithmetic_expression T_NEQ arithmetic_expression
   33                      | • arithmetic_expression T_LT arithmetic_expression
   34                      | • arithmetic_expression T_GT arithmetic_expression
   35                      | • arithmetic_expression T_LTE arithmetic_expression
   36                      | • arithmetic_expression T_GTE arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   49                   | T_LPAREN • expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39
    T_NOT              shift, and go to state 40

    expression             go to state 56
    comparison_expression  go to state 42
    arithmetic_expression  go to state 43
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 38

   50 bool_literal: T_TRUE •

    $default  reduce using rule 50 (bool_literal)


State 39

   51 bool_literal: T_FALSE •

    $default  reduce using rule 51 (bool_literal)


State 40

   26 expression: • expression T_AND expression
   27           | • expression T_OR expression
   28           | • T_NOT expression
   28           | T_NOT • expression
   29           | • comparison_expression
   30 comparison_expression: • arithmetic_expression
   31                      | • arithmetic_expression T_EQ arithmetic_expression
   32                      | • arithmetic_expression T_NEQ arithmetic_expression
   33                      | • arithmetic_expression T_LT arithmetic_expression
   34                      | • arithmetic_expression T_GT arithmetic_expression
   35                      | • arithmetic_expression T_LTE arithmetic_expression
   36                      | • arithmetic_expression T_GTE arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39
    T_NOT              shift, and go to state 40

    expression             go to state 57
    comparison_expression  go to state 42
    arithmetic_expression  go to state 43
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 41

   21 if_statement: T_IF T_LPAREN expression • T_RPAREN block
   22             | T_IF T_LPAREN expression • T_RPAREN block T_ELSE block
   26 expression: expression • T_AND expression
   27           | expression • T_OR expression

    T_RPAREN  shift, and go to state 58
    T_AND     shift, and go to state 59
    T_OR      shift, and go to state 60


State 42

   29 expression: comparison_expression •

    $default  reduce using rule 29 (expression)


State 43

   30 comparison_expression: arithmetic_expression •  [T_RPAREN, T_SEMICOLON, T_AND, T_OR]
   31                      | arithmetic_expression • T_EQ arithmetic_expression
   32                      | arithmetic_expression • T_NEQ arithmetic_expression
   33                      | arithmetic_expression • T_LT arithmetic_expression
   34                      | arithmetic_expression • T_GT arithmetic_expression
   35                      | arithmetic_expression • T_LTE arithmetic_expression
   36                      | arithmetic_expression • T_GTE arithmetic_expression
   38 arithmetic_expression: arithmetic_expression • T_PLUS term
   39                      | arithmetic_expression • T_MINUS term

    T_PLUS   shift, and go to state 61
    T_MINUS  shift, and go to state 62
    T_EQ     shift, and go to state 63
    T_NEQ    shift, and go to state 64
    T_LT     shift, and go to state 65
    T_GT     shift, and go to state 66
    T_LTE    shift, and go to state 67
    T_GTE    shift, and go to state 68

    $default  reduce using rule 30 (comparison_expression)


State 44

   37 arithmetic_expression: term •  [T_PLUS, T_MINUS, T_EQ, T_NEQ, T_LT, T_GT, T_LTE, T_GTE, T_RPAREN, T_SEMICOLON, T_AND, T_OR]
   41 term: term • T_MULTIPLY factor
   42     | term • T_DIVIDE factor

    T_MULTIPLY  shift, and go to state 69
    T_DIVIDE    shift, and go to state 70

    $default  reduce using rule 37 (arithmetic_expression)


State 45

   40 term: factor •

    $default  reduce using rule 40 (term)


State 46

   43 factor: primary_expression •

    $default  reduce using rule 43 (factor)


State 47

   48 primary_expression: bool_literal •

    $default  reduce using rule 48 (primary_expression)


State 48

   44 primary_expression: identifier •

    $default  reduce using rule 44 (primary_expression)


State 49

   23 while_statement: T_WHILE T_LPAREN expression • T_RPAREN block
   26 expression: expression • T_AND expression
   27           | expression • T_OR expression

    T_RPAREN  shift, and go to state 71
    T_AND     shift, and go to state 59
    T_OR      shift, and go to state 60


State 50

   24 print_statement: T_PRINT T_LPAREN expression • T_RPAREN T_SEMICOLON
   26 expression: expression • T_AND expression
   27           | expression • T_OR expression

    T_RPAREN  shift, and go to state 72
    T_AND     shift, and go to state 59
    T_OR      shift, and go to state 60


State 51

   25 read_statement: T_READ T_LPAREN identifier • T_RPAREN T_SEMICOLON

    T_RPAREN  shift, and go to state 73


State 52

   13 block: T_LBRACE statement_list T_RBRACE •

    $default  reduce using rule 13 (block)


State 53

   19 variable_declaration: type_specifier identifier T_ASSIGN • expression T_SEMICOLON
   26 expression: • expression T_AND expression
   27           | • expression T_OR expression
   28           | • T_NOT expression
   29           | • comparison_expression
   30 comparison_expression: • arithmetic_expression
   31                      | • arithmetic_expression T_EQ arithmetic_expression
   32                      | • arithmetic_expression T_NEQ arithmetic_expression
   33                      | • arithmetic_expression T_LT arithmetic_expression
   34                      | • arithmetic_expression T_GT arithmetic_expression
   35                      | • arithmetic_expression T_LTE arithmetic_expression
   36                      | • arithmetic_expression T_GTE arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39
    T_NOT              shift, and go to state 40

    expression             go to state 74
    comparison_expression  go to state 42
    arithmetic_expression  go to state 43
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 54

   18 variable_declaration: type_specifier identifier T_SEMICOLON •

    $default  reduce using rule 18 (variable_declaration)


State 55

   20 assignment_statement: identifier T_ASSIGN expression • T_SEMICOLON
   26 expression: expression • T_AND expression
   27           | expression • T_OR expression

    T_SEMICOLON  shift, and go to state 75
    T_AND        shift, and go to state 59
    T_OR         shift, and go to state 60


State 56

   26 expression: expression • T_AND expression
   27           | expression • T_OR expression
   49 primary_expression: T_LPAREN expression • T_RPAREN

    T_RPAREN  shift, and go to state 76
    T_AND     shift, and go to state 59
    T_OR      shift, and go to state 60


State 57

   26 expression: expression • T_AND expression
   27           | expression • T_OR expression
   28           | T_NOT expression •  [T_RPAREN, T_SEMICOLON, T_AND, T_OR]

    T_AND  shift, and go to state 59
    T_OR   shift, and go to state 60

    T_AND     [reduce using rule 28 (expression)]
    T_OR      [reduce using rule 28 (expression)]
    $default  reduce using rule 28 (expression)

    shift/reduce conflict on token T_AND:
       28 expression: T_NOT expression •
       26 expression: expression • T_AND expression
      Example: T_NOT expression • T_AND expression
      Shift derivation
        expression
        ↳ 28: T_NOT expression
                    ↳ 26: expression • T_AND expression
      Reduce derivation
        expression
        ↳ 26: expression               T_AND expression
              ↳ 28: T_NOT expression •

    shift/reduce conflict on token T_OR:
       28 expression: T_NOT expression •
       27 expression: expression • T_OR expression
      Example: T_NOT expression • T_OR expression
      Shift derivation
        expression
        ↳ 28: T_NOT expression
                    ↳ 27: expression • T_OR expression
      Reduce derivation
        expression
        ↳ 27: expression               T_OR expression
              ↳ 28: T_NOT expression •



State 58

   13 block: • T_LBRACE statement_list T_RBRACE
   21 if_statement: T_IF T_LPAREN expression T_RPAREN • block
   22             | T_IF T_LPAREN expression T_RPAREN • block T_ELSE block

    T_LBRACE  shift, and go to state 12

    block  go to state 77


State 59

   26 expression: • expression T_AND expression
   26           | expression T_AND • expression
   27           | • expression T_OR expression
   28           | • T_NOT expression
   29           | • comparison_expression
   30 comparison_expression: • arithmetic_expression
   31                      | • arithmetic_expression T_EQ arithmetic_expression
   32                      | • arithmetic_expression T_NEQ arithmetic_expression
   33                      | • arithmetic_expression T_LT arithmetic_expression
   34                      | • arithmetic_expression T_GT arithmetic_expression
   35                      | • arithmetic_expression T_LTE arithmetic_expression
   36                      | • arithmetic_expression T_GTE arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39
    T_NOT              shift, and go to state 40

    expression             go to state 78
    comparison_expression  go to state 42
    arithmetic_expression  go to state 43
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 60

   26 expression: • expression T_AND expression
   27           | • expression T_OR expression
   27           | expression T_OR • expression
   28           | • T_NOT expression
   29           | • comparison_expression
   30 comparison_expression: • arithmetic_expression
   31                      | • arithmetic_expression T_EQ arithmetic_expression
   32                      | • arithmetic_expression T_NEQ arithmetic_expression
   33                      | • arithmetic_expression T_LT arithmetic_expression
   34                      | • arithmetic_expression T_GT arithmetic_expression
   35                      | • arithmetic_expression T_LTE arithmetic_expression
   36                      | • arithmetic_expression T_GTE arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39
    T_NOT              shift, and go to state 40

    expression             go to state 79
    comparison_expression  go to state 42
    arithmetic_expression  go to state 43
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 61

   38 arithmetic_expression: arithmetic_expression T_PLUS • term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39

    term                go to state 80
    factor              go to state 45
    primary_expression  go to state 46
    bool_literal        go to state 47
    identifier          go to state 48


State 62

   39 arithmetic_expression: arithmetic_expression T_MINUS • term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39

    term                go to state 81
    factor              go to state 45
    primary_expression  go to state 46
    bool_literal        go to state 47
    identifier          go to state 48


State 63

   31 comparison_expression: arithmetic_expression T_EQ • arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39

    arithmetic_expression  go to state 82
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 64

   32 comparison_expression: arithmetic_expression T_NEQ • arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39

    arithmetic_expression  go to state 83
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 65

   33 comparison_expression: arithmetic_expression T_LT • arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39

    arithmetic_expression  go to state 84
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 66

   34 comparison_expression: arithmetic_expression T_GT • arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39

    arithmetic_expression  go to state 85
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 67

   35 comparison_expression: arithmetic_expression T_LTE • arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39

    arithmetic_expression  go to state 86
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 68

   36 comparison_expression: arithmetic_expression T_GTE • arithmetic_expression
   37 arithmetic_expression: • term
   38                      | • arithmetic_expression T_PLUS term
   39                      | • arithmetic_expression T_MINUS term
   40 term: • factor
   41     | • term T_MULTIPLY factor
   42     | • term T_DIVIDE factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39

    arithmetic_expression  go to state 87
    term                   go to state 44
    factor                 go to state 45
    primary_expression     go to state 46
    bool_literal           go to state 47
    identifier             go to state 48


State 69

   41 term: term T_MULTIPLY • factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39

    factor              go to state 88
    primary_expression  go to state 46
    bool_literal        go to state 47
    identifier          go to state 48


State 70

   42 term: term T_DIVIDE • factor
   43 factor: • primary_expression
   44 primary_expression: • identifier
   45                   | • T_INTEGER_LITERAL
   46                   | • T_FLOAT_LITERAL
   47                   | • T_STRING_LITERAL
   48                   | • bool_literal
   49                   | • T_LPAREN expression T_RPAREN
   50 bool_literal: • T_TRUE
   51             | • T_FALSE
   52 identifier: • T_IDENTIFIER

    T_IDENTIFIER       shift, and go to state 4
    T_INTEGER_LITERAL  shift, and go to state 34
    T_FLOAT_LITERAL    shift, and go to state 35
    T_STRING_LITERAL   shift, and go to state 36
    T_LPAREN           shift, and go to state 37
    T_TRUE             shift, and go to state 38
    T_FALSE            shift, and go to state 39

    factor              go to state 89
    primary_expression  go to state 46
    bool_literal        go to state 47
    identifier          go to state 48


State 71

   13 block: • T_LBRACE statement_list T_RBRACE
   23 while_statement: T_WHILE T_LPAREN expression T_RPAREN • block

    T_LBRACE  shift, and go to state 12

    block  go to state 90


State 72

   24 print_statement: T_PRINT T_LPAREN expression T_RPAREN • T_SEMICOLON

    T_SEMICOLON  shift, and go to state 91


State 73

   25 read_statement: T_READ T_LPAREN identifier T_RPAREN • T_SEMICOLON

    T_SEMICOLON  shift, and go to state 92


State 74

   19 variable_declaration: type_specifier identifier T_ASSIGN expression • T_SEMICOLON
   26 expression: expression • T_AND expression
   27           | expression • T_OR expression

    T_SEMICOLON  shift, and go to state 93
    T_AND        shift, and go to state 59
    T_OR         shift, and go to state 60


State 75

   20 assignment_statement: identifier T_ASSIGN expression T_SEMICOLON •

    $default  reduce using rule 20 (assignment_statement)


State 76

   49 primary_expression: T_LPAREN expression T_RPAREN •

    $default  reduce using rule 49 (primary_expression)


State 77

   21 if_statement: T_IF T_LPAREN expression T_RPAREN block •  [$end, T_IDENTIFIER, T_INT, T_FLOAT, T_STRING_TYPE, T_IF, T_WHILE, T_PRINT, T_READ, T_LBRACE, T_RBRACE, T_SEMICOLON, T_ERROR, T_BOOL]
   22             | T_IF T_LPAREN expression T_RPAREN block • T_ELSE block

    T_ELSE  shift, and go to state 94

    $default  reduce using rule 21 (if_statement)


State 78

   26 expression: expression • T_AND expression
   26           | expression T_AND expression •  [T_RPAREN, T_SEMICOLON, T_AND, T_OR]
   27           | expression • T_OR expression

    T_AND  shift, and go to state 59
    T_OR   shift, and go to state 60

    T_AND     [reduce using rule 26 (expression)]
    T_OR      [reduce using rule 26 (expression)]
    $default  reduce using rule 26 (expression)

    shift/reduce conflict on token T_AND:
       26 expression: expression T_AND expression •
       26 expression: expression • T_AND expression
      Example: expression T_AND expression • T_AND expression
      Shift derivation
        expression
        ↳ 26: expression T_AND expression
                               ↳ 26: expression • T_AND expression
      Reduce derivation
        expression
        ↳ 26: expression                          T_AND expression
              ↳ 26: expression T_AND expression •

    shift/reduce conflict on token T_OR:
       26 expression: expression T_AND expression •
       27 expression: expression • T_OR expression
      Example: expression T_AND expression • T_OR expression
      Shift derivation
        expression
        ↳ 26: expression T_AND expression
                               ↳ 27: expression • T_OR expression
      Reduce derivation
        expression
        ↳ 27: expression                          T_OR expression
              ↳ 26: expression T_AND expression •



State 79

   26 expression: expression • T_AND expression
   27           | expression • T_OR expression
   27           | expression T_OR expression •  [T_RPAREN, T_SEMICOLON, T_AND, T_OR]

    T_AND  shift, and go to state 59
    T_OR   shift, and go to state 60

    T_AND     [reduce using rule 27 (expression)]
    T_OR      [reduce using rule 27 (expression)]
    $default  reduce using rule 27 (expression)

    shift/reduce conflict on token T_AND:
       27 expression: expression T_OR expression •
       26 expression: expression • T_AND expression
      Example: expression T_OR expression • T_AND expression
      Shift derivation
        expression
        ↳ 27: expression T_OR expression
                              ↳ 26: expression • T_AND expression
      Reduce derivation
        expression
        ↳ 26: expression                         T_AND expression
              ↳ 27: expression T_OR expression •

    shift/reduce conflict on token T_OR:
       27 expression: expression T_OR expression •
       27 expression: expression • T_OR expression
      Example: expression T_OR expression • T_OR expression
      Shift derivation
        expression
        ↳ 27: expression T_OR expression
                              ↳ 27: expression • T_OR expression
      Reduce derivation
        expression
        ↳ 27: expression                         T_OR expression
              ↳ 27: expression T_OR expression •



State 80

   38 arithmetic_expression: arithmetic_expression T_PLUS term •  [T_PLUS, T_MINUS, T_EQ, T_NEQ, T_LT, T_GT, T_LTE, T_GTE, T_RPAREN, T_SEMICOLON, T_AND, T_OR]
   41 term: term • T_MULTIPLY factor
   42     | term • T_DIVIDE factor

    T_MULTIPLY  shift, and go to state 69
    T_DIVIDE    shift, and go to state 70

    $default  reduce using rule 38 (arithmetic_expression)


State 81

   39 arithmetic_expression: arithmetic_expression T_MINUS term •  [T_PLUS, T_MINUS, T_EQ, T_NEQ, T_LT, T_GT, T_LTE, T_GTE, T_RPAREN, T_SEMICOLON, T_AND, T_OR]
   41 term: term • T_MULTIPLY factor
   42     | term • T_DIVIDE factor

    T_MULTIPLY  shift, and go to state 69
    T_DIVIDE    shift, and go to state 70

    $default  reduce using rule 39 (arithmetic_expression)


State 82

   31 comparison_expression: arithmetic_expression T_EQ arithmetic_expression •  [T_RPAREN, T_SEMICOLON, T_AND, T_OR]
   38 arithmetic_expression: arithmetic_expression • T_PLUS term
   39                      | arithmetic_expression • T_MINUS term

    T_PLUS   shift, and go to state 61
    T_MINUS  shift, and go to state 62

    $default  reduce using rule 31 (comparison_expression)


State 83

   32 comparison_expression: arithmetic_expression T_NEQ arithmetic_expression •  [T_RPAREN, T_SEMICOLON, T_AND, T_OR]
   38 arithmetic_expression: arithmetic_expression • T_PLUS term
   39                      | arithmetic_expression • T_MINUS term

    T_PLUS   shift, and go to state 61
    T_MINUS  shift, and go to state 62

    $default  reduce using rule 32 (comparison_expression)


State 84

   33 comparison_expression: arithmetic_expression T_LT arithmetic_expression •  [T_RPAREN, T_SEMICOLON, T_AND, T_OR]
   38 arithmetic_expression: arithmetic_expression • T_PLUS term
   39                      | arithmetic_expression • T_MINUS term

    T_PLUS   shift, and go to state 61
    T_MINUS  shift, and go to state 62

    $default  reduce using rule 33 (comparison_expression)


State 85

   34 comparison_expression: arithmetic_expression T_GT arithmetic_expression •  [T_RPAREN, T_SEMICOLON, T_AND, T_OR]
   38 arithmetic_expression: arithmetic_expression • T_PLUS term
   39                      | arithmetic_expression • T_MINUS term

    T_PLUS   shift, and go to state 61
    T_MINUS  shift, and go to state 62

    $default  reduce using rule 34 (comparison_expression)


State 86

   35 comparison_expression: arithmetic_expression T_LTE arithmetic_expression •  [T_RPAREN, T_SEMICOLON, T_AND, T_OR]
   38 arithmetic_expression: arithmetic_expression • T_PLUS term
   39                      | arithmetic_expression • T_MINUS term

    T_PLUS   shift, and go to state 61
    T_MINUS  shift, and go to state 62

    $default  reduce using rule 35 (comparison_expression)


State 87

   36 comparison_expression: arithmetic_expression T_GTE arithmetic_expression •  [T_RPAREN, T_SEMICOLON, T_AND, T_OR]
   38 arithmetic_expression: arithmetic_expression • T_PLUS term
   39                      | arithmetic_expression • T_MINUS term

    T_PLUS   shift, and go to state 61
    T_MINUS  shift, and go to state 62

    $default  reduce using rule 36 (comparison_expression)


State 88

   41 term: term T_MULTIPLY factor •

    $default  reduce using rule 41 (term)


State 89

   42 term: term T_DIVIDE factor •

    $default  reduce using rule 42 (term)


State 90

   23 while_statement: T_WHILE T_LPAREN expression T_RPAREN block •

    $default  reduce using rule 23 (while_statement)


State 91

   24 print_statement: T_PRINT T_LPAREN expression T_RPAREN T_SEMICOLON •

    $default  reduce using rule 24 (print_statement)


State 92

   25 read_statement: T_READ T_LPAREN identifier T_RPAREN T_SEMICOLON •

    $default  reduce using rule 25 (read_statement)


State 93

   19 variable_declaration: type_specifier identifier T_ASSIGN expression T_SEMICOLON •

    $default  reduce using rule 19 (variable_declaration)


State 94

   13 block: • T_LBRACE statement_list T_RBRACE
   22 if_statement: T_IF T_LPAREN expression T_RPAREN block T_ELSE • block

    T_LBRACE  shift, and go to state 12

    block  go to state 95


State 95

   22 if_statement: T_IF T_LPAREN expression T_RPAREN block T_ELSE block •

    $default  reduce using rule 22 (if_statement)
